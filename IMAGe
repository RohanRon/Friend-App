package friend.debug.studio.image;

import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.BitmapRegionDecoder;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.View;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.ImageView;
import android.widget.Toast;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.BreakIterator;

public class MainActivity extends AppCompatActivity implements View.OnClickListener {
    ImageView iv;
    private static final int IMAGE_PICK=1;
    private BitmapRegionDecoder photo_gallery;
    private BitmapFactory.Options options;
    private BreakIterator edtNameImage;
    private Context context;
    private Bitmap bmp;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                        .setAction("Action", null).show();
            }
        });
        iv = (ImageView) findViewById(R.id.imageView);
        iv.setOnClickListener(this);
        retreive();
    }





    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    @Override
    public void onClick(View v) {
            Intent galleryintent = new Intent(Intent.ACTION_GET_CONTENT);
            galleryintent.setType("image/*");
            startActivityForResult(galleryintent, IMAGE_PICK);


        }
    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode==1){
            if (data!=null&&resultCode==RESULT_OK){
                Uri selectedImage=data.getData();
                String[] filePathColumn={MediaStore.Images.Media.DATA};
                Cursor cursor=getContentResolver().query(selectedImage, filePathColumn, null, null, null);
                cursor.moveToFirst();
                int columnIndex=cursor.getColumnIndex(filePathColumn[0]);
                String filePath=cursor.getString(columnIndex);
                cursor.close();
                if ((bmp != null) && !bmp.isRecycled()){
                    bmp=null;
                }
                bmp= BitmapFactory.decodeFile(filePath);
                iv.setBackgroundResource(0);
                iv.setImageBitmap(bmp);
                storeImage();


            }
            else {
                Log.d("Status:","Photopicker canceled");
            }
        }

    }

    public  boolean storeImage(){

        ByteArrayOutputStream bytes = new ByteArrayOutputStream();
        File file = Environment.getExternalStorageDirectory();
        // write the bytes in file
        File dir=new File(file.getAbsolutePath()+"/friend/");
        dir.mkdirs();
        File image=new File(dir,"myProfile.JPEG");
        FileOutputStream fo;
        try {
            file.createNewFile();
            fo = new FileOutputStream(image);//snapshot image is the image to be stored.

            if (image!=null)
            {
                bmp.compress(Bitmap.CompressFormat.JPEG, 100, bytes);

            }else{
                return false;
            }
            fo.write(bytes.toByteArray());
            // ChartConstants.IMAGE_STORAGE++;

            fo.flush();
            fo.close();
        } catch (IOException e1) {
            // TODO Auto-generated catch block
            e1.printStackTrace();
        }


        return true;

               }
    public boolean retreive(){
        File f = new File(Environment.getExternalStorageDirectory()+ "/friend/"+"myProfile.JPEG");
        bmp = BitmapFactory.decodeFile(f.getAbsolutePath());
        iv.setImageBitmap(bmp);
        return  true;
    }






    }







